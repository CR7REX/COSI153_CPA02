{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { API_KEY } from \"./utils/WeatherAPIKey\";\nimport Weather from \"./components/Weather\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoading: true,\n      temperature: 0,\n      weatherCondition: null,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.fetchWeather(position.coords.latitude, position.coords.longitude);\n      }, function (error) {\n        _this2.setState({\n          error: 'Error Getting Weather Condtions'\n        });\n      });\n    }\n  }, {\n    key: \"fetchWeather\",\n    value: function fetchWeather(lat, lon) {\n      var _this3 = this;\n\n      fetch(\"http://api.openweathermap.org/data/2.5/weather?lat=\" + lat + \"&lon=\" + lon + \"&APPID=\" + API_KEY + \"&units=metric\").then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this3.setState({\n          temperature: json.main.temp,\n          weatherCondition: json.weather[0].main,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          weatherCondition = _this$state.weatherCondition,\n          temperature = _this$state.temperature;\n      return _jsx(View, {\n        style: styles.container,\n        children: isLoading ? _jsx(View, {\n          style: styles.loadingContainer,\n          children: _jsx(Text, {\n            style: styles.loadingText,\n            children: \"Fetching The Weather\"\n          })\n        }) : _jsx(Weather, {\n          weather: weatherCondition,\n          temperature: temperature\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FFFDE4'\n  },\n  loadingText: {\n    fontSize: 30\n  }\n});","map":{"version":3,"names":["React","API_KEY","Weather","App","state","isLoading","temperature","weatherCondition","error","navigator","geolocation","getCurrentPosition","position","fetchWeather","coords","latitude","longitude","setState","lat","lon","fetch","then","res","json","main","temp","weather","styles","container","loadingContainer","loadingText","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize"],"sources":["/Users/rex/Desktop/COSI153_CPA02/App.js"],"sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Animated } from 'react-native'\n\nimport { API_KEY } from './utils/WeatherAPIKey'\n\nimport Weather from './components/Weather'\n\nexport default class App extends React.Component {\n  state = {\n    isLoading: true,\n    temperature: 0,\n    weatherCondition: null,\n    error: null,\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.fetchWeather(position.coords.latitude, position.coords.longitude)\n      },\n      (error) => {\n        this.setState({\n          error: 'Error Getting Weather Condtions',\n        })\n      }\n    )\n  }\n\n  fetchWeather(lat, lon) {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${API_KEY}&units=metric`\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        // console.log(json);\n        this.setState({\n          temperature: json.main.temp,\n          weatherCondition: json.weather[0].main,\n          isLoading: false,\n        })\n      })\n  }\n\n  render() {\n    const { isLoading, weatherCondition, temperature } = this.state\n    return (\n      <View style={styles.container}>\n        {isLoading ? (\n          <View style={styles.loadingContainer}>\n            <Text style={styles.loadingText}>Fetching The Weather</Text>\n          </View>\n        ) : (\n          <Weather weather={weatherCondition} temperature={temperature} />\n        )}\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FFFDE4',\n  },\n  loadingText: {\n    fontSize: 30,\n  },\n})\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,SAASC,OAAT;AAEA,OAAOC,OAAP;;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;MACNC,SAAS,EAAE,IADL;MAENC,WAAW,EAAE,CAFP;MAGNC,gBAAgB,EAAE,IAHZ;MAINC,KAAK,EAAE;IAJD,C;;;;;;WAOR,6BAAoB;MAAA;;MAClBC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,UAACC,QAAD,EAAc;QACZ,MAAI,CAACC,YAAL,CAAkBD,QAAQ,CAACE,MAAT,CAAgBC,QAAlC,EAA4CH,QAAQ,CAACE,MAAT,CAAgBE,SAA5D;MACD,CAHH,EAIE,UAACR,KAAD,EAAW;QACT,MAAI,CAACS,QAAL,CAAc;UACZT,KAAK,EAAE;QADK,CAAd;MAGD,CARH;IAUD;;;WAED,sBAAaU,GAAb,EAAkBC,GAAlB,EAAuB;MAAA;;MACrBC,KAAK,yDACmDF,GADnD,aAC8DC,GAD9D,eAC2ElB,OAD3E,mBAAL,CAGGoB,IAHH,CAGQ,UAACC,GAAD;QAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;MAAA,CAHR,EAIGF,IAJH,CAIQ,UAACE,IAAD,EAAU;QAEd,MAAI,CAACN,QAAL,CAAc;UACZX,WAAW,EAAEiB,IAAI,CAACC,IAAL,CAAUC,IADX;UAEZlB,gBAAgB,EAAEgB,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBF,IAFtB;UAGZnB,SAAS,EAAE;QAHC,CAAd;MAKD,CAXH;IAYD;;;WAED,kBAAS;MACP,kBAAqD,KAAKD,KAA1D;MAAA,IAAQC,SAAR,eAAQA,SAAR;MAAA,IAAmBE,gBAAnB,eAAmBA,gBAAnB;MAAA,IAAqCD,WAArC,eAAqCA,WAArC;MACA,OACE,KAAC,IAAD;QAAM,KAAK,EAAEqB,MAAM,CAACC,SAApB;QAAA,UACGvB,SAAS,GACR,KAAC,IAAD;UAAM,KAAK,EAAEsB,MAAM,CAACE,gBAApB;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEF,MAAM,CAACG,WAApB;YAAA;UAAA;QADF,EADQ,GAKR,KAAC,OAAD;UAAS,OAAO,EAAEvB,gBAAlB;UAAoC,WAAW,EAAED;QAAjD;MANJ,EADF;IAWD;;;;EAjD8BN,KAAK,CAAC+B,S;;SAAlB5B,G;AAoDrB,IAAMwB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETC,eAAe,EAAE;EAFR,CADoB;EAK/BN,gBAAgB,EAAE;IAChBK,IAAI,EAAE,CADU;IAEhBE,UAAU,EAAE,QAFI;IAGhBC,cAAc,EAAE,QAHA;IAIhBF,eAAe,EAAE;EAJD,CALa;EAW/BL,WAAW,EAAE;IACXQ,QAAQ,EAAE;EADC;AAXkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}